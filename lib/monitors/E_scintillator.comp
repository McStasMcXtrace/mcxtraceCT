/*******************************************************************************
*
* McXtrace, X-ray tracing package
*         Copyright (C), All rights reserved
*         Risoe National Laboratory, Roskilde, Denmark
*         Institut Laue Langevin, Grenoble, France
*         Copenhagen Univeristy, Copenhagen, Denmark
*
* Component: E_monitor
*
* %I
* Written by: Erik Knudsen
* Based on neutron component written by Kristian Nielsen and Kim Lefmann
*
* Date: June 22, 2009
* Version: $Revision$
* Origin: Risoe
* Release: McXtrace 0.1
*
* Energy-sensitive monitor.
*
* %D
* A square single monitor that measures the energy of the incoming x-rays.
*
* Example: E_monitor(xmin=-0.1, xmax=0.1, ymin=-0.1, ymax=0.1,
*                 Emin=1, Emax=50, nE=20, filename="Output.nrj")
*
* %P
* INPUT PARAMETERS:
*
* xmin:     Lower x bound of detector opening (m)
* xmax:     Upper x bound of detector opening (m)
* ymin:     Lower y bound of detector opening (m)
* ymax:     Upper y bound of detector opening (m)
* xwidth:   Width of detector. Overrides xmin,xmax. (m)
* yheight:  Height of detector. Overrides ymin,ymax. (m)
* Emin:     Minimum energy to detect (keV)
* Emax:     Maximum energy to detect (keV)
* nE:       Number of energy channels (1)
* filename: Name of file in which to store the detector image (text)
* restore_xray: If set, the monitor does not influence the xray state (1)
*
* OUTPUT PARAMETERS:
*
* E_N:      Array of x.ray counts
* E_p:      Array of x-ray weight counts
* E_p2:     Array of second moments
*
* %E
*******************************************************************************/

DEFINE COMPONENT E_scintillator
DEFINITION PARAMETERS (nE=20, string filename=0, string det_response = "Si.txt")
SETTING PARAMETERS (xmin=-0.05, xmax=0.05, ymin=-0.05, ymax=0.05, 
  xwidth=0, yheight=0, Emin, Emax, restore_xray=0, thickness = 300e-6)
OUTPUT PARAMETERS (E_N, E_p, E_p2)
/* X-ray parameters: (x,y,z,kx,ky,kz,phi,t,Ex,Ey,Ez,p) */ 
SHARE
%{
  %include "read_table-lib"
%}
DECLARE
%{
    double E_N[nE];
    double E_p[nE], E_p2[nE];
	t_Table cross_table; // cross sections table
	double rho;
%}
INITIALIZE
  %{
    int i;
	int status=0;
	
	if((status=Table_Read(&cross_table, det_response, 0))==-1){ // loads file into table
		fprintf(stderr,"Error: Could not parse file \"%s\" in COMP %s\n",det_response,NAME_CURRENT_COMP);
		exit(-1);
	}
	
    if (xwidth  > 0) { xmax = xwidth/2;  xmin = -xmax; }
    if (yheight > 0) { ymax = yheight/2; ymin = -ymax; }

    if ((xmin >= xmax) || (ymin >= ymax)) {
            printf("E_monitor: %s: Null detection area !\n"
                   "ERROR      (xwidth,yheight,xmin,xmax,ymin,ymax). Exiting",
           NAME_CURRENT_COMP);
      exit(0);
    }

    for (i=0; i<nE; i++)
    {
      E_N[i] = 0;
      E_p[i] = 0;
      E_p2[i] = 0;
    }
	
	status=0;
	if((status=Table_Read(&cross_table, det_response, 0))==-1){ // loads file into table
		fprintf(stderr,"Error: Could not parse file \"%s\" in COMP %s\n",det_response,NAME_CURRENT_COMP);
		exit(-1);
	}
	//rho
	char **header_parsed = Table_ParseHeader(cross_table.header,"rho",NULL);
	if(header_parsed[0]){rho = strtod(header_parsed[0],NULL);}
	else{fprintf(stderr,"Warning(%s): %s not found in header of %s, set to 1\n",NAME_CURRENT_COMP,"rho",det_response); rho = 1;}
	printf("Scintillator bulk density (rho) = %1.3f.\n",rho);		
  %}
  
TRACE
  %{
    int i;
    

	
    PROP_Z0;
    if (x>xmin && x<xmax && y>ymin && y<ymax)
    {
	  double E=sqrt(scalar_prod(kx,ky,kz,kx,ky,kz))*K2E;
	  //account for detector's response
	  double mu = Table_Value(cross_table,E,5);
	  double l = thickness;
	  p*=exp(-rho*mu*l);
	  
	  //continue
      i = floor((E-Emin)*nE/(Emax-Emin));
      if(i >= 0 && i < nE)
      {
        E_N[i]++;
        E_p[i] += p;
        E_p2[i] += p*p;
        SCATTER;
      }
    }
    if (restore_xray) {
      RESTORE_XRAY(INDEX_CURRENT_COMP, x, y, z, kx, ky, kz, phi, t, Ex, Ey, Ez, p);
    }
  %}
SAVE
  %{
    DETECTOR_OUT_1D(
        "Energy monitor",
        "Energy [keV]",
        "Intensity",
        "E", Emin, Emax, nE,
        &E_N[0],&E_p[0],&E_p2[0],
        filename);
  %}

MCDISPLAY
%{
	magnify("xy");
	box(0,0,0,xwidth,yheight,thickness);
%}

END
